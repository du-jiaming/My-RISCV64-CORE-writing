;buildInfoPackage: chisel3, version: 3.4.3, scalaVersion: 2.12.12, sbtVersion: 1.3.10
circuit core : 
  module if_id : 
    input clock : Clock
    input reset : Reset
    output io : {flip pc : UInt<64>, flip inst : UInt<32>, pc_o : UInt<64>, inst_o : UInt<32>}
    
    reg pcR : UInt<64>, clock with : (reset => (reset, UInt<64>("h00"))) @[pipeline.scala 41:20]
    reg instR : UInt<32>, clock with : (reset => (reset, UInt<32>("h00"))) @[pipeline.scala 42:22]
    pcR <= io.pc @[pipeline.scala 44:7]
    instR <= io.inst @[pipeline.scala 45:9]
    io.pc_o <= pcR @[pipeline.scala 47:11]
    io.inst_o <= instR @[pipeline.scala 48:13]
    
  module id_ex : 
    input clock : Clock
    input reset : Reset
    output io : {pc_and_inst_in : {flip pc : UInt<64>, flip inst : UInt<32>}, flip pc_and_inst_out : {flip pc : UInt<64>, flip inst : UInt<32>}, flip inst_is_jump_in : UInt<1>, inst_is_jump_o : UInt<1>, src_in : {flip src1 : UInt<64>, flip src2 : UInt<64>, flip imm : UInt<64>}, flip src_out : {flip src1 : UInt<64>, flip src2 : UInt<64>, flip imm : UInt<64>}, flip wb_addr_in : UInt<5>, wb_addr_o : UInt<5>, flip Dmem_wdata_in : UInt<64>, Dmem_wdata_o : UInt<64>, flip exeu_op : UInt<5>, exeu_op_o : UInt<5>, mem_wen_io : {flip mem_wen_in : UInt<1>, mem_wen_o : UInt<1>}, reg_wen_io : {flip reg_wen_in : UInt<1>, reg_wen_o : UInt<1>}, wb_type_io : {flip reg_wtype_in : UInt<2>, reg_wtype_out : UInt<2>}}
    
    reg pcR : UInt<64>, clock with : (reset => (reset, UInt<64>("h00"))) @[pipeline.scala 76:20]
    reg instR : UInt<32>, clock with : (reset => (reset, UInt<32>("h00"))) @[pipeline.scala 77:22]
    pcR <= io.pc_and_inst_in.pc @[pipeline.scala 78:7]
    instR <= io.pc_and_inst_in.inst @[pipeline.scala 79:9]
    io.pc_and_inst_out.pc <= pcR @[pipeline.scala 80:25]
    io.pc_and_inst_out.inst <= instR @[pipeline.scala 81:27]
    reg immR : UInt<64>, clock with : (reset => (reset, UInt<64>("h00"))) @[pipeline.scala 83:21]
    reg src1R : UInt<64>, clock with : (reset => (reset, UInt<64>("h00"))) @[pipeline.scala 84:22]
    reg src2R : UInt<64>, clock with : (reset => (reset, UInt<64>("h00"))) @[pipeline.scala 85:22]
    immR <= io.src_in.imm @[pipeline.scala 86:8]
    src1R <= io.src_in.src1 @[pipeline.scala 87:9]
    src2R <= io.src_in.src2 @[pipeline.scala 88:9]
    io.src_out.imm <= immR @[pipeline.scala 89:19]
    io.src_out.src1 <= src1R @[pipeline.scala 90:19]
    io.src_out.src2 <= src2R @[pipeline.scala 91:19]
    reg wb_addrR : UInt<5>, clock with : (reset => (reset, UInt<5>("h00"))) @[pipeline.scala 93:25]
    wb_addrR <= io.wb_addr_in @[pipeline.scala 94:12]
    io.wb_addr_o <= wb_addrR @[pipeline.scala 95:16]
    reg exeu_op_selR : UInt<5>, clock with : (reset => (reset, UInt<5>("h00"))) @[pipeline.scala 98:28]
    exeu_op_selR <= io.exeu_op @[pipeline.scala 99:16]
    io.exeu_op_o <= exeu_op_selR @[pipeline.scala 100:16]
    reg memwenR : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[pipeline.scala 102:24]
    memwenR <= io.mem_wen_io.mem_wen_in @[pipeline.scala 103:11]
    io.mem_wen_io.mem_wen_o <= memwenR @[pipeline.scala 104:27]
    reg wenR : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[pipeline.scala 106:21]
    wenR <= io.reg_wen_io.reg_wen_in @[pipeline.scala 107:8]
    io.reg_wen_io.reg_wen_o <= wenR @[pipeline.scala 108:27]
    reg wtypeR : UInt<2>, clock with : (reset => (reset, UInt<2>("h00"))) @[pipeline.scala 110:23]
    wtypeR <= io.wb_type_io.reg_wtype_in @[pipeline.scala 111:10]
    io.wb_type_io.reg_wtype_out <= wtypeR @[pipeline.scala 112:31]
    reg Dmem_wdataR : UInt<64>, clock with : (reset => (reset, UInt<64>("h00"))) @[pipeline.scala 113:28]
    Dmem_wdataR <= io.Dmem_wdata_in @[pipeline.scala 114:15]
    io.Dmem_wdata_o <= Dmem_wdataR @[pipeline.scala 115:19]
    reg inst_is_j_flagR : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[pipeline.scala 118:32]
    inst_is_j_flagR <= io.inst_is_jump_in @[pipeline.scala 120:19]
    io.inst_is_jump_o <= inst_is_j_flagR @[pipeline.scala 121:21]
    
  module RF : 
    input clock : Clock
    input reset : Reset
    output io : {channel : {flip raddr1 : UInt<5>, flip raddr2 : UInt<5>, rdata1 : UInt<64>, rdata2 : UInt<64>, flip wen : UInt<1>, flip waddr : UInt<5>, flip wdata : UInt<64>}}
    
    cmem rfR : UInt<64>[32] @[RF.scala 14:16]
    node _T = neq(io.channel.waddr, UInt<5>("h00")) @[RF.scala 15:43]
    node _T_1 = and(io.channel.wen, _T) @[RF.scala 15:23]
    when _T_1 : @[RF.scala 15:63]
      infer mport MPORT = rfR[io.channel.waddr], clock @[RF.scala 16:8]
      MPORT <= io.channel.wdata @[RF.scala 16:27]
      skip @[RF.scala 15:63]
    node _io_channel_rdata1_T = eq(io.channel.raddr1, UInt<5>("h00")) @[RF.scala 20:46]
    infer mport io_channel_rdata1_MPORT = rfR[io.channel.raddr1], clock @[RF.scala 22:30]
    node _io_channel_rdata1_T_1 = mux(_io_channel_rdata1_T, UInt<64>("h00"), io_channel_rdata1_MPORT) @[RF.scala 20:27]
    io.channel.rdata1 <= _io_channel_rdata1_T_1 @[RF.scala 20:21]
    node _io_channel_rdata2_T = eq(io.channel.raddr2, UInt<5>("h00")) @[RF.scala 24:46]
    infer mport io_channel_rdata2_MPORT = rfR[io.channel.raddr2], clock @[RF.scala 26:30]
    node _io_channel_rdata2_T_1 = mux(_io_channel_rdata2_T, UInt<64>("h00"), io_channel_rdata2_MPORT) @[RF.scala 24:27]
    io.channel.rdata2 <= _io_channel_rdata2_T_1 @[RF.scala 24:21]
    
  module ex_mem : 
    input clock : Clock
    input reset : Reset
    output io : {pc_and_inst_in : {flip pc : UInt<64>, flip inst : UInt<32>}, flip pc_and_inst_out : {flip pc : UInt<64>, flip inst : UInt<32>}, flip alu_out_in : UInt<64>, alu_out_o : UInt<64>, flip wb_addr_in : UInt<5>, wb_addr_o : UInt<5>, flip Dmem_wdata_in : UInt<64>, Dmem_wdata_o : UInt<64>, mem_wen_io : {flip mem_wen_in : UInt<1>, mem_wen_o : UInt<1>}, rf_wen_io : {flip reg_wen_in : UInt<1>, reg_wen_o : UInt<1>}, wb_sel_io : {flip reg_wtype_in : UInt<2>, reg_wtype_out : UInt<2>}}
    
    reg pcR : UInt<64>, clock with : (reset => (reset, UInt<64>("h00"))) @[pipeline.scala 142:20]
    reg instR : UInt<32>, clock with : (reset => (reset, UInt<32>("h00"))) @[pipeline.scala 143:22]
    pcR <= io.pc_and_inst_in.pc @[pipeline.scala 144:7]
    instR <= io.pc_and_inst_in.inst @[pipeline.scala 145:9]
    io.pc_and_inst_out.pc <= pcR @[pipeline.scala 146:25]
    io.pc_and_inst_out.inst <= instR @[pipeline.scala 147:27]
    reg mem_wenR : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[pipeline.scala 149:25]
    reg rf_wenR : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[pipeline.scala 150:24]
    reg wb_selR : UInt<2>, clock with : (reset => (reset, UInt<2>("h00"))) @[pipeline.scala 151:24]
    reg wb_addrR : UInt<5>, clock with : (reset => (reset, UInt<5>("h00"))) @[pipeline.scala 152:25]
    reg alu_outR : UInt<64>, clock with : (reset => (reset, UInt<64>("h00"))) @[pipeline.scala 153:25]
    reg Dmem_wdataR : UInt<64>, clock with : (reset => (reset, UInt<64>("h00"))) @[pipeline.scala 154:28]
    Dmem_wdataR <= io.Dmem_wdata_in @[pipeline.scala 155:15]
    io.Dmem_wdata_o <= Dmem_wdataR @[pipeline.scala 156:19]
    mem_wenR <= io.mem_wen_io.mem_wen_in @[pipeline.scala 159:12]
    io.mem_wen_io.mem_wen_o <= mem_wenR @[pipeline.scala 160:27]
    rf_wenR <= io.rf_wen_io.reg_wen_in @[pipeline.scala 161:11]
    io.rf_wen_io.reg_wen_o <= rf_wenR @[pipeline.scala 162:26]
    wb_selR <= io.wb_sel_io.reg_wtype_in @[pipeline.scala 163:11]
    io.wb_sel_io.reg_wtype_out <= wb_selR @[pipeline.scala 164:30]
    wb_addrR <= io.wb_addr_in @[pipeline.scala 165:12]
    io.wb_addr_o <= wb_addrR @[pipeline.scala 166:16]
    alu_outR <= io.alu_out_in @[pipeline.scala 167:12]
    io.alu_out_o <= alu_outR @[pipeline.scala 168:16]
    
  module mem_wb : 
    input clock : Clock
    input reset : Reset
    output io : {pc_and_inst_in : {flip pc : UInt<64>, flip inst : UInt<32>}, flip pc_and_inst_o : {flip pc : UInt<64>, flip inst : UInt<32>}, flip pc_plus4_in : UInt<64>, pc_plus4_o : UInt<64>, flip wb_addr_in : UInt<5>, wb_addr_o : UInt<5>, flip alu_out_in : UInt<64>, alu_out_o : UInt<64>, rf_wen_io : {flip reg_wen_in : UInt<1>, reg_wen_o : UInt<1>}, wb_sel_io : {flip reg_wtype_in : UInt<2>, reg_wtype_out : UInt<2>}, flip Dmem_rdata_in : UInt<64>, Dmem_rdata_o : UInt<64>}
    
    reg pcR : UInt<64>, clock with : (reset => (reset, UInt<64>("h00"))) @[pipeline.scala 191:20]
    pcR <= io.pc_and_inst_in.pc @[pipeline.scala 192:7]
    io.pc_and_inst_o.pc <= pcR @[pipeline.scala 193:23]
    reg instR : UInt<32>, clock with : (reset => (reset, UInt<32>("h00"))) @[pipeline.scala 195:22]
    instR <= io.pc_and_inst_in.inst @[pipeline.scala 196:9]
    io.pc_and_inst_o.inst <= instR @[pipeline.scala 197:25]
    reg wb_addrR : UInt<5>, clock with : (reset => (reset, UInt<5>("h00"))) @[pipeline.scala 199:25]
    wb_addrR <= io.wb_addr_in @[pipeline.scala 200:12]
    io.wb_addr_o <= wb_addrR @[pipeline.scala 201:16]
    reg rf_wenR : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[pipeline.scala 203:24]
    rf_wenR <= io.rf_wen_io.reg_wen_in @[pipeline.scala 204:11]
    io.rf_wen_io.reg_wen_o <= rf_wenR @[pipeline.scala 205:26]
    reg wb_selR : UInt<2>, clock with : (reset => (reset, UInt<2>("h00"))) @[pipeline.scala 207:24]
    wb_selR <= io.wb_sel_io.reg_wtype_in @[pipeline.scala 208:11]
    io.wb_sel_io.reg_wtype_out <= wb_selR @[pipeline.scala 209:30]
    reg Dmem_rdataR : UInt<64>, clock with : (reset => (reset, UInt<64>("h00"))) @[pipeline.scala 211:28]
    Dmem_rdataR <= io.Dmem_rdata_in @[pipeline.scala 212:15]
    io.Dmem_rdata_o <= Dmem_rdataR @[pipeline.scala 213:19]
    reg pcplus4R : UInt<64>, clock with : (reset => (reset, UInt<64>("h00"))) @[pipeline.scala 215:25]
    pcplus4R <= io.pc_plus4_in @[pipeline.scala 216:12]
    io.pc_plus4_o <= pcplus4R @[pipeline.scala 217:17]
    reg aluR : UInt<64>, clock with : (reset => (reset, UInt<64>("h00"))) @[pipeline.scala 219:21]
    aluR <= io.alu_out_in @[pipeline.scala 220:8]
    io.alu_out_o <= aluR @[pipeline.scala 221:16]
    
  extmodule dpi : 
    input inst_in : UInt<32>
    
    defname = dpi
    
    
  module core : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip Imemio : {flip cen : UInt<1>, flip pc : UInt<64>, inst : UInt<32>}, flip DMemio : {flip addr : UInt<32>, rdata : UInt<64>, flip wen : UInt<1>, flip wdata : UInt<64>}, Deubug : {Debug_rf_wen : UInt<1>, Debug_rf_waddr : UInt<5>, Debug_rf_wdata : UInt<64>, Debug_pc : UInt<64>, Debug_inst : UInt<32>}}
    
    inst if_id_pl of if_id @[core.scala 27:24]
    if_id_pl.clock <= clock
    if_id_pl.reset <= reset
    inst id_ex_pl of id_ex @[core.scala 28:24]
    id_ex_pl.clock <= clock
    id_ex_pl.reset <= reset
    inst rf of RF @[core.scala 33:18]
    rf.clock <= clock
    rf.reset <= reset
    wire alu_out : UInt<64> @[core.scala 34:21]
    reg ImemCenR : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[core.scala 38:26]
    ImemCenR <= UInt<1>("h01") @[core.scala 39:12]
    reg pc_reg : UInt<64>, clock @[core.scala 40:19]
    wire pc_plus4 : UInt<64> @[core.scala 41:22]
    node _pc_plus4_T = add(pc_reg, UInt<64>("h04")) @[core.scala 42:22]
    node _pc_plus4_T_1 = tail(_pc_plus4_T, 1) @[core.scala 42:22]
    pc_plus4 <= _pc_plus4_T_1 @[core.scala 42:12]
    wire branch_target : UInt<64> @[core.scala 51:28]
    wire jump_target : UInt<64> @[core.scala 52:25]
    wire branch_flag : UInt<1> @[core.scala 53:27]
    wire jump_flag : UInt<1> @[core.scala 54:27]
    wire inst_id : UInt<32> @[core.scala 57:21]
    wire pc_id : UInt<32> @[core.scala 58:19]
    wire inst_ex : UInt<32> @[core.scala 60:21]
    wire jump_flag_ex : UInt<1> @[core.scala 64:26]
    node jumpAndBranchMuxSel = cat(branch_flag, jump_flag_ex) @[Cat.scala 30:58]
    node _next_pc_T = mux(branch_flag, branch_target, pc_plus4) @[Mux.scala 98:16]
    node next_pc = mux(jump_flag_ex, jump_target, _next_pc_T) @[Mux.scala 98:16]
    io.Imemio.cen <= ImemCenR @[core.scala 75:17]
    node _T = eq(io.Imemio.cen, UInt<1>("h00")) @[core.scala 76:21]
    when _T : @[core.scala 76:32]
      pc_reg <= UInt<64>("h080000000") @[core.scala 77:12]
      skip @[core.scala 76:32]
    else : @[core.scala 78:5]
      pc_reg <= next_pc @[core.scala 79:12]
      skip @[core.scala 78:5]
    io.Imemio.pc <= pc_reg @[core.scala 81:18]
    if_id_pl.io.pc <= pc_reg @[core.scala 83:20]
    if_id_pl.io.inst <= io.Imemio.inst @[core.scala 84:22]
    inst_id <= if_id_pl.io.inst_o @[core.scala 87:11]
    pc_id <= if_id_pl.io.pc_o @[core.scala 88:11]
    node rs1 = bits(inst_id, 19, 15) @[core.scala 90:20]
    node rs2 = bits(inst_id, 24, 20) @[core.scala 91:20]
    node rd = bits(inst_id, 11, 7) @[core.scala 92:20]
    rf.io.channel.raddr1 <= rs1 @[core.scala 93:24]
    rf.io.channel.raddr2 <= rs2 @[core.scala 94:24]
    node imm_i = bits(inst_id, 31, 20) @[core.scala 99:22]
    node _imm_i_sext_T = bits(imm_i, 11, 11) @[core.scala 100:37]
    node _imm_i_sext_T_1 = bits(_imm_i_sext_T, 0, 0) @[Bitwise.scala 72:15]
    node imm_i_sext_hi = mux(_imm_i_sext_T_1, UInt<52>("h0fffffffffffff"), UInt<52>("h00")) @[Bitwise.scala 72:12]
    node imm_i_sext = cat(imm_i_sext_hi, imm_i) @[Cat.scala 30:58]
    node imm_s_hi = bits(inst_id, 31, 25) @[core.scala 102:26]
    node imm_s_lo = bits(inst_id, 11, 7) @[core.scala 102:41]
    node imm_s = cat(imm_s_hi, imm_s_lo) @[Cat.scala 30:58]
    node _imm_s_sext_T = bits(imm_s, 11, 11) @[core.scala 103:37]
    node _imm_s_sext_T_1 = bits(_imm_s_sext_T, 0, 0) @[Bitwise.scala 72:15]
    node imm_s_sext_hi = mux(_imm_s_sext_T_1, UInt<52>("h0fffffffffffff"), UInt<52>("h00")) @[Bitwise.scala 72:12]
    node imm_s_sext = cat(imm_s_sext_hi, imm_s) @[Cat.scala 30:58]
    node imm_u = bits(inst_id, 31, 12) @[core.scala 105:22]
    node _imm_u_sext_T = bits(imm_u, 19, 19) @[core.scala 106:37]
    node _imm_u_sext_T_1 = bits(_imm_u_sext_T, 0, 0) @[Bitwise.scala 72:15]
    node imm_u_sext_hi = mux(_imm_u_sext_T_1, UInt<44>("h0fffffffffff"), UInt<44>("h00")) @[Bitwise.scala 72:12]
    node imm_u_sext = cat(imm_u_sext_hi, imm_u) @[Cat.scala 30:58]
    node imm_u_shifted_lo = mux(UInt<1>("h00"), UInt<12>("h0fff"), UInt<12>("h00")) @[Bitwise.scala 72:12]
    node imm_u_shifted = cat(imm_u_sext, imm_u_shifted_lo) @[Cat.scala 30:58]
    node imm_j_hi_hi = bits(inst_id, 31, 31) @[core.scala 109:26]
    node imm_j_hi_lo = bits(inst_id, 19, 12) @[core.scala 109:38]
    node imm_j_lo_hi = bits(inst_id, 30, 21) @[core.scala 109:53]
    node imm_j_lo_lo = bits(inst_id, 20, 20) @[core.scala 109:68]
    node imm_j_lo = cat(imm_j_lo_hi, imm_j_lo_lo) @[Cat.scala 30:58]
    node imm_j_hi = cat(imm_j_hi_hi, imm_j_hi_lo) @[Cat.scala 30:58]
    node imm_j = cat(imm_j_hi, imm_j_lo) @[Cat.scala 30:58]
    node _imm_j_sext_T = bits(imm_j, 19, 19) @[core.scala 110:37]
    node _imm_j_sext_T_1 = bits(_imm_j_sext_T, 0, 0) @[Bitwise.scala 72:15]
    node imm_j_sext_hi_hi = mux(_imm_j_sext_T_1, UInt<43>("h07ffffffffff"), UInt<43>("h00")) @[Bitwise.scala 72:12]
    node imm_j_sext_hi = cat(imm_j_sext_hi_hi, imm_j) @[Cat.scala 30:58]
    node imm_j_sext = cat(imm_j_sext_hi, UInt<1>("h00")) @[Cat.scala 30:58]
    node imm_b_hi_hi = bits(inst_id, 31, 31) @[core.scala 112:26]
    node imm_b_hi_lo = bits(inst_id, 7, 7) @[core.scala 112:38]
    node imm_b_lo_hi = bits(inst_id, 30, 25) @[core.scala 112:49]
    node imm_b_lo_lo = bits(inst_id, 11, 8) @[core.scala 112:64]
    node imm_b_lo = cat(imm_b_lo_hi, imm_b_lo_lo) @[Cat.scala 30:58]
    node imm_b_hi = cat(imm_b_hi_hi, imm_b_hi_lo) @[Cat.scala 30:58]
    node imm_b = cat(imm_b_hi, imm_b_lo) @[Cat.scala 30:58]
    node _imm_b_sext_T = bits(imm_b, 11, 11) @[core.scala 113:37]
    node _imm_b_sext_T_1 = bits(_imm_b_sext_T, 0, 0) @[Bitwise.scala 72:15]
    node imm_b_sext_hi_hi = mux(_imm_b_sext_T_1, UInt<51>("h07ffffffffffff"), UInt<51>("h00")) @[Bitwise.scala 72:12]
    node imm_b_sext_hi = cat(imm_b_sext_hi_hi, imm_b) @[Cat.scala 30:58]
    node imm_b_sext = cat(imm_b_sext_hi, UInt<1>("h00")) @[Cat.scala 30:58]
    node imm_zero = bits(inst_id, 19, 15) @[core.scala 116:25]
    node imm_zext_hi = mux(UInt<1>("h00"), UInt<59>("h07ffffffffffffff"), UInt<59>("h00")) @[Bitwise.scala 72:12]
    node imm_zext = cat(imm_zext_hi, imm_zero) @[Cat.scala 30:58]
    node _op_signals_T = and(inst_id, UInt<15>("h0707f")) @[Lookup.scala 31:38]
    node _op_signals_T_1 = eq(UInt<5>("h013"), _op_signals_T) @[Lookup.scala 31:38]
    node _op_signals_T_2 = and(inst_id, UInt<32>("h0fe00707f")) @[Lookup.scala 31:38]
    node _op_signals_T_3 = eq(UInt<6>("h033"), _op_signals_T_2) @[Lookup.scala 31:38]
    node _op_signals_T_4 = and(inst_id, UInt<32>("h0fe00707f")) @[Lookup.scala 31:38]
    node _op_signals_T_5 = eq(UInt<31>("h040000033"), _op_signals_T_4) @[Lookup.scala 31:38]
    node _op_signals_T_6 = and(inst_id, UInt<7>("h07f")) @[Lookup.scala 31:38]
    node _op_signals_T_7 = eq(UInt<6>("h037"), _op_signals_T_6) @[Lookup.scala 31:38]
    node _op_signals_T_8 = and(inst_id, UInt<7>("h07f")) @[Lookup.scala 31:38]
    node _op_signals_T_9 = eq(UInt<7>("h06f"), _op_signals_T_8) @[Lookup.scala 31:38]
    node _op_signals_T_10 = and(inst_id, UInt<15>("h0707f")) @[Lookup.scala 31:38]
    node _op_signals_T_11 = eq(UInt<7>("h067"), _op_signals_T_10) @[Lookup.scala 31:38]
    node _op_signals_T_12 = and(inst_id, UInt<7>("h07f")) @[Lookup.scala 31:38]
    node _op_signals_T_13 = eq(UInt<5>("h017"), _op_signals_T_12) @[Lookup.scala 31:38]
    node _op_signals_T_14 = and(inst_id, UInt<15>("h0707f")) @[Lookup.scala 31:38]
    node _op_signals_T_15 = eq(UInt<14>("h03023"), _op_signals_T_14) @[Lookup.scala 31:38]
    node _op_signals_T_16 = and(inst_id, UInt<15>("h0707f")) @[Lookup.scala 31:38]
    node _op_signals_T_17 = eq(UInt<7>("h063"), _op_signals_T_16) @[Lookup.scala 31:38]
    node _op_signals_T_18 = mux(_op_signals_T_17, UInt<5>("h0b"), UInt<5>("h00")) @[Lookup.scala 33:37]
    node _op_signals_T_19 = mux(_op_signals_T_15, UInt<5>("h01"), _op_signals_T_18) @[Lookup.scala 33:37]
    node _op_signals_T_20 = mux(_op_signals_T_13, UInt<5>("h01"), _op_signals_T_19) @[Lookup.scala 33:37]
    node _op_signals_T_21 = mux(_op_signals_T_11, UInt<5>("h011"), _op_signals_T_20) @[Lookup.scala 33:37]
    node _op_signals_T_22 = mux(_op_signals_T_9, UInt<5>("h01"), _op_signals_T_21) @[Lookup.scala 33:37]
    node _op_signals_T_23 = mux(_op_signals_T_7, UInt<5>("h01"), _op_signals_T_22) @[Lookup.scala 33:37]
    node _op_signals_T_24 = mux(_op_signals_T_5, UInt<5>("h02"), _op_signals_T_23) @[Lookup.scala 33:37]
    node _op_signals_T_25 = mux(_op_signals_T_3, UInt<5>("h01"), _op_signals_T_24) @[Lookup.scala 33:37]
    node exec_fun = mux(_op_signals_T_1, UInt<5>("h01"), _op_signals_T_25) @[Lookup.scala 33:37]
    node _op_signals_T_26 = mux(_op_signals_T_17, UInt<2>("h00"), UInt<2>("h02")) @[Lookup.scala 33:37]
    node _op_signals_T_27 = mux(_op_signals_T_15, UInt<2>("h00"), _op_signals_T_26) @[Lookup.scala 33:37]
    node _op_signals_T_28 = mux(_op_signals_T_13, UInt<2>("h01"), _op_signals_T_27) @[Lookup.scala 33:37]
    node _op_signals_T_29 = mux(_op_signals_T_11, UInt<2>("h00"), _op_signals_T_28) @[Lookup.scala 33:37]
    node _op_signals_T_30 = mux(_op_signals_T_9, UInt<2>("h01"), _op_signals_T_29) @[Lookup.scala 33:37]
    node _op_signals_T_31 = mux(_op_signals_T_7, UInt<2>("h02"), _op_signals_T_30) @[Lookup.scala 33:37]
    node _op_signals_T_32 = mux(_op_signals_T_5, UInt<2>("h00"), _op_signals_T_31) @[Lookup.scala 33:37]
    node _op_signals_T_33 = mux(_op_signals_T_3, UInt<2>("h00"), _op_signals_T_32) @[Lookup.scala 33:37]
    node op1_sel = mux(_op_signals_T_1, UInt<2>("h00"), _op_signals_T_33) @[Lookup.scala 33:37]
    node _op_signals_T_34 = mux(_op_signals_T_17, UInt<3>("h01"), UInt<3>("h00")) @[Lookup.scala 33:37]
    node _op_signals_T_35 = mux(_op_signals_T_15, UInt<3>("h03"), _op_signals_T_34) @[Lookup.scala 33:37]
    node _op_signals_T_36 = mux(_op_signals_T_13, UInt<3>("h04"), _op_signals_T_35) @[Lookup.scala 33:37]
    node _op_signals_T_37 = mux(_op_signals_T_11, UInt<3>("h02"), _op_signals_T_36) @[Lookup.scala 33:37]
    node _op_signals_T_38 = mux(_op_signals_T_9, UInt<3>("h05"), _op_signals_T_37) @[Lookup.scala 33:37]
    node _op_signals_T_39 = mux(_op_signals_T_7, UInt<3>("h04"), _op_signals_T_38) @[Lookup.scala 33:37]
    node _op_signals_T_40 = mux(_op_signals_T_5, UInt<3>("h01"), _op_signals_T_39) @[Lookup.scala 33:37]
    node _op_signals_T_41 = mux(_op_signals_T_3, UInt<3>("h01"), _op_signals_T_40) @[Lookup.scala 33:37]
    node op2_sel = mux(_op_signals_T_1, UInt<3>("h02"), _op_signals_T_41) @[Lookup.scala 33:37]
    node _op_signals_T_42 = mux(_op_signals_T_17, UInt<1>("h00"), UInt<1>("h00")) @[Lookup.scala 33:37]
    node _op_signals_T_43 = mux(_op_signals_T_15, UInt<1>("h01"), _op_signals_T_42) @[Lookup.scala 33:37]
    node _op_signals_T_44 = mux(_op_signals_T_13, UInt<1>("h00"), _op_signals_T_43) @[Lookup.scala 33:37]
    node _op_signals_T_45 = mux(_op_signals_T_11, UInt<1>("h00"), _op_signals_T_44) @[Lookup.scala 33:37]
    node _op_signals_T_46 = mux(_op_signals_T_9, UInt<1>("h00"), _op_signals_T_45) @[Lookup.scala 33:37]
    node _op_signals_T_47 = mux(_op_signals_T_7, UInt<1>("h00"), _op_signals_T_46) @[Lookup.scala 33:37]
    node _op_signals_T_48 = mux(_op_signals_T_5, UInt<1>("h00"), _op_signals_T_47) @[Lookup.scala 33:37]
    node _op_signals_T_49 = mux(_op_signals_T_3, UInt<1>("h00"), _op_signals_T_48) @[Lookup.scala 33:37]
    node mem_wen = mux(_op_signals_T_1, UInt<1>("h00"), _op_signals_T_49) @[Lookup.scala 33:37]
    node _op_signals_T_50 = mux(_op_signals_T_17, UInt<1>("h00"), UInt<1>("h00")) @[Lookup.scala 33:37]
    node _op_signals_T_51 = mux(_op_signals_T_15, UInt<1>("h00"), _op_signals_T_50) @[Lookup.scala 33:37]
    node _op_signals_T_52 = mux(_op_signals_T_13, UInt<1>("h01"), _op_signals_T_51) @[Lookup.scala 33:37]
    node _op_signals_T_53 = mux(_op_signals_T_11, UInt<1>("h01"), _op_signals_T_52) @[Lookup.scala 33:37]
    node _op_signals_T_54 = mux(_op_signals_T_9, UInt<1>("h01"), _op_signals_T_53) @[Lookup.scala 33:37]
    node _op_signals_T_55 = mux(_op_signals_T_7, UInt<1>("h01"), _op_signals_T_54) @[Lookup.scala 33:37]
    node _op_signals_T_56 = mux(_op_signals_T_5, UInt<1>("h01"), _op_signals_T_55) @[Lookup.scala 33:37]
    node _op_signals_T_57 = mux(_op_signals_T_3, UInt<1>("h01"), _op_signals_T_56) @[Lookup.scala 33:37]
    node op_signals_4 = mux(_op_signals_T_1, UInt<1>("h01"), _op_signals_T_57) @[Lookup.scala 33:37]
    node _op_signals_T_58 = mux(_op_signals_T_17, UInt<2>("h00"), UInt<2>("h00")) @[Lookup.scala 33:37]
    node _op_signals_T_59 = mux(_op_signals_T_15, UInt<2>("h00"), _op_signals_T_58) @[Lookup.scala 33:37]
    node _op_signals_T_60 = mux(_op_signals_T_13, UInt<2>("h01"), _op_signals_T_59) @[Lookup.scala 33:37]
    node _op_signals_T_61 = mux(_op_signals_T_11, UInt<2>("h02"), _op_signals_T_60) @[Lookup.scala 33:37]
    node _op_signals_T_62 = mux(_op_signals_T_9, UInt<2>("h02"), _op_signals_T_61) @[Lookup.scala 33:37]
    node _op_signals_T_63 = mux(_op_signals_T_7, UInt<2>("h01"), _op_signals_T_62) @[Lookup.scala 33:37]
    node _op_signals_T_64 = mux(_op_signals_T_5, UInt<2>("h01"), _op_signals_T_63) @[Lookup.scala 33:37]
    node _op_signals_T_65 = mux(_op_signals_T_3, UInt<2>("h01"), _op_signals_T_64) @[Lookup.scala 33:37]
    node op_signals_5 = mux(_op_signals_T_1, UInt<2>("h01"), _op_signals_T_65) @[Lookup.scala 33:37]
    node _op1_T = eq(UInt<2>("h00"), op1_sel) @[Mux.scala 80:60]
    node _op1_T_1 = mux(_op1_T, rf.io.channel.rdata1, UInt<64>("h00")) @[Mux.scala 80:57]
    node _op1_T_2 = eq(UInt<2>("h01"), op1_sel) @[Mux.scala 80:60]
    node _op1_T_3 = mux(_op1_T_2, pc_reg, _op1_T_1) @[Mux.scala 80:57]
    node _op1_T_4 = eq(UInt<2>("h03"), op1_sel) @[Mux.scala 80:60]
    node op1 = mux(_op1_T_4, imm_zext, _op1_T_3) @[Mux.scala 80:57]
    node _op2_T = eq(UInt<3>("h01"), op2_sel) @[Mux.scala 80:60]
    node _op2_T_1 = mux(_op2_T, rf.io.channel.rdata2, UInt<64>("h00")) @[Mux.scala 80:57]
    node _op2_T_2 = eq(UInt<3>("h02"), op2_sel) @[Mux.scala 80:60]
    node _op2_T_3 = mux(_op2_T_2, imm_i_sext, _op2_T_1) @[Mux.scala 80:57]
    node _op2_T_4 = eq(UInt<3>("h04"), op2_sel) @[Mux.scala 80:60]
    node _op2_T_5 = mux(_op2_T_4, imm_u_shifted, _op2_T_3) @[Mux.scala 80:57]
    node _op2_T_6 = eq(UInt<3>("h05"), op2_sel) @[Mux.scala 80:60]
    node _op2_T_7 = mux(_op2_T_6, imm_j_sext, _op2_T_5) @[Mux.scala 80:57]
    node _op2_T_8 = eq(UInt<3>("h03"), op2_sel) @[Mux.scala 80:60]
    node op2 = mux(_op2_T_8, imm_s_sext, _op2_T_7) @[Mux.scala 80:57]
    node _jump_flag_T = and(inst_id, UInt<7>("h07f")) @[core.scala 145:27]
    node _jump_flag_T_1 = eq(UInt<7>("h06f"), _jump_flag_T) @[core.scala 145:27]
    node _jump_flag_T_2 = and(inst_id, UInt<15>("h0707f")) @[core.scala 145:46]
    node _jump_flag_T_3 = eq(UInt<7>("h067"), _jump_flag_T_2) @[core.scala 145:46]
    node _jump_flag_T_4 = or(_jump_flag_T_1, _jump_flag_T_3) @[core.scala 145:35]
    jump_flag <= _jump_flag_T_4 @[core.scala 145:13]
    wire pc_ex : UInt<64> @[core.scala 148:19]
    wire imm_b_sext_ex : UInt<64> @[core.scala 149:27]
    wire op1_ex : UInt<64> @[core.scala 150:20]
    wire op2_ex : UInt<64> @[core.scala 151:20]
    wire exec_fun_ex : UInt<5> @[core.scala 152:25]
    wire memwen_ex : UInt<1> @[core.scala 153:23]
    wire rf_wen_ex : UInt<1> @[core.scala 154:23]
    wire wb_sel_ex : UInt<2> @[core.scala 155:23]
    wire wb_addr_ex : UInt<5> @[core.scala 156:24]
    wire Dmem_wdata_ex : UInt<64> @[core.scala 157:27]
    id_ex_pl.io.inst_is_jump_in <= jump_flag @[core.scala 161:31]
    jump_flag_ex <= id_ex_pl.io.inst_is_jump_o @[core.scala 162:16]
    id_ex_pl.io.pc_and_inst_in.pc <= pc_id @[core.scala 165:35]
    id_ex_pl.io.pc_and_inst_in.inst <= inst_id @[core.scala 166:35]
    inst_ex <= id_ex_pl.io.pc_and_inst_out.inst @[core.scala 167:11]
    pc_ex <= id_ex_pl.io.pc_and_inst_out.pc @[core.scala 168:11]
    id_ex_pl.io.src_in.imm <= imm_b_sext_ex @[core.scala 170:27]
    imm_b_sext_ex <= id_ex_pl.io.src_out.imm @[core.scala 171:27]
    id_ex_pl.io.src_in.src1 <= op1 @[core.scala 173:27]
    id_ex_pl.io.src_in.src2 <= op2 @[core.scala 174:27]
    op1_ex <= id_ex_pl.io.src_out.src1 @[core.scala 175:10]
    op2_ex <= id_ex_pl.io.src_out.src2 @[core.scala 176:10]
    id_ex_pl.io.exeu_op <= exec_fun @[core.scala 178:23]
    exec_fun_ex <= id_ex_pl.io.exeu_op_o @[core.scala 179:23]
    id_ex_pl.io.mem_wen_io.mem_wen_in <= mem_wen @[core.scala 181:39]
    memwen_ex <= id_ex_pl.io.mem_wen_io.mem_wen_o @[core.scala 182:39]
    id_ex_pl.io.reg_wen_io.reg_wen_in <= op_signals_4 @[core.scala 184:39]
    rf_wen_ex <= id_ex_pl.io.reg_wen_io.reg_wen_o @[core.scala 185:39]
    id_ex_pl.io.wb_type_io.reg_wtype_in <= op_signals_5 @[core.scala 187:39]
    wb_sel_ex <= id_ex_pl.io.wb_type_io.reg_wtype_out @[core.scala 188:39]
    id_ex_pl.io.wb_addr_in <= rd @[core.scala 190:39]
    wb_addr_ex <= id_ex_pl.io.wb_addr_o @[core.scala 191:39]
    id_ex_pl.io.Dmem_wdata_in <= rf.io.channel.rdata2 @[core.scala 193:29]
    Dmem_wdata_ex <= id_ex_pl.io.Dmem_wdata_o @[core.scala 194:17]
    node _alu_out_T = add(op1_ex, op2_ex) @[Ctrl.scala 22:24]
    node _alu_out_T_1 = tail(_alu_out_T, 1) @[Ctrl.scala 22:24]
    node _alu_out_T_2 = sub(op1_ex, op2_ex) @[Ctrl.scala 23:24]
    node _alu_out_T_3 = tail(_alu_out_T_2, 1) @[Ctrl.scala 23:24]
    node _alu_out_T_4 = and(op1_ex, op2_ex) @[Ctrl.scala 24:24]
    node _alu_out_T_5 = or(op1_ex, op2_ex) @[Ctrl.scala 25:24]
    node _alu_out_T_6 = add(op1_ex, op2_ex) @[Ctrl.scala 26:25]
    node _alu_out_T_7 = tail(_alu_out_T_6, 1) @[Ctrl.scala 26:25]
    node _alu_out_T_8 = not(UInt<64>("h01")) @[Ctrl.scala 26:36]
    node _alu_out_T_9 = and(_alu_out_T_7, _alu_out_T_8) @[Ctrl.scala 26:33]
    node _alu_out_T_10 = xor(op1_ex, op2_ex) @[Ctrl.scala 27:24]
    node _alu_out_T_11 = eq(UInt<5>("h01"), exec_fun_ex) @[Mux.scala 80:60]
    node _alu_out_T_12 = mux(_alu_out_T_11, _alu_out_T_1, UInt<64>("h00")) @[Mux.scala 80:57]
    node _alu_out_T_13 = eq(UInt<5>("h02"), exec_fun_ex) @[Mux.scala 80:60]
    node _alu_out_T_14 = mux(_alu_out_T_13, _alu_out_T_3, _alu_out_T_12) @[Mux.scala 80:57]
    node _alu_out_T_15 = eq(UInt<5>("h03"), exec_fun_ex) @[Mux.scala 80:60]
    node _alu_out_T_16 = mux(_alu_out_T_15, _alu_out_T_4, _alu_out_T_14) @[Mux.scala 80:57]
    node _alu_out_T_17 = eq(UInt<5>("h04"), exec_fun_ex) @[Mux.scala 80:60]
    node _alu_out_T_18 = mux(_alu_out_T_17, _alu_out_T_5, _alu_out_T_16) @[Mux.scala 80:57]
    node _alu_out_T_19 = eq(UInt<5>("h011"), exec_fun_ex) @[Mux.scala 80:60]
    node _alu_out_T_20 = mux(_alu_out_T_19, _alu_out_T_9, _alu_out_T_18) @[Mux.scala 80:57]
    node _alu_out_T_21 = eq(UInt<5>("h05"), exec_fun_ex) @[Mux.scala 80:60]
    node _alu_out_T_22 = mux(_alu_out_T_21, _alu_out_T_10, _alu_out_T_20) @[Mux.scala 80:57]
    alu_out <= _alu_out_T_22 @[core.scala 204:11]
    node _jump_target_T = mux(jump_flag_ex, alu_out, UInt<64>("h00")) @[core.scala 205:21]
    jump_target <= _jump_target_T @[core.scala 205:15]
    node _branch_target_T = add(pc_ex, imm_b_sext_ex) @[core.scala 211:26]
    node _branch_target_T_1 = tail(_branch_target_T, 1) @[core.scala 211:26]
    branch_target <= _branch_target_T_1 @[core.scala 211:17]
    node _hi_T = eq(op1_ex, op2_ex) @[Ctrl.scala 34:28]
    node _hi_T_1 = neq(op1_ex, op2_ex) @[Ctrl.scala 35:28]
    node _hi_T_2 = asSInt(op1_ex) @[Ctrl.scala 36:34]
    node _hi_T_3 = asSInt(op2_ex) @[Ctrl.scala 36:54]
    node _hi_T_4 = lt(_hi_T_2, _hi_T_3) @[Ctrl.scala 36:41]
    node _hi_T_5 = asSInt(op1_ex) @[Ctrl.scala 37:36]
    node _hi_T_6 = asSInt(op2_ex) @[Ctrl.scala 37:54]
    node _hi_T_7 = lt(_hi_T_5, _hi_T_6) @[Ctrl.scala 37:41]
    node _hi_T_8 = not(_hi_T_7) @[Ctrl.scala 37:24]
    node _hi_T_9 = lt(op1_ex, op2_ex) @[Ctrl.scala 38:41]
    node _hi_T_10 = not(_hi_T_9) @[Ctrl.scala 38:24]
    node _hi_T_11 = lt(op1_ex, op2_ex) @[Ctrl.scala 39:41]
    node _hi_T_12 = eq(UInt<5>("h0b"), exec_fun_ex) @[Mux.scala 80:60]
    node _hi_T_13 = mux(_hi_T_12, _hi_T, UInt<1>("h00")) @[Mux.scala 80:57]
    node _hi_T_14 = eq(UInt<5>("h0c"), exec_fun_ex) @[Mux.scala 80:60]
    node _hi_T_15 = mux(_hi_T_14, _hi_T_1, _hi_T_13) @[Mux.scala 80:57]
    node _hi_T_16 = eq(UInt<5>("h0d"), exec_fun_ex) @[Mux.scala 80:60]
    node _hi_T_17 = mux(_hi_T_16, _hi_T_4, _hi_T_15) @[Mux.scala 80:57]
    node _hi_T_18 = eq(UInt<5>("h0e"), exec_fun_ex) @[Mux.scala 80:60]
    node _hi_T_19 = mux(_hi_T_18, _hi_T_8, _hi_T_17) @[Mux.scala 80:57]
    node _hi_T_20 = eq(UInt<5>("h010"), exec_fun_ex) @[Mux.scala 80:60]
    node _hi_T_21 = mux(_hi_T_20, _hi_T_10, _hi_T_19) @[Mux.scala 80:57]
    node _hi_T_22 = eq(UInt<5>("h0f"), exec_fun_ex) @[Mux.scala 80:60]
    node _hi_T_23 = mux(_hi_T_22, _hi_T_11, _hi_T_21) @[Mux.scala 80:57]
    branch_flag <= _hi_T_23 @[core.scala 212:15]
    inst ex_mem_pl of ex_mem @[core.scala 218:24]
    ex_mem_pl.clock <= clock
    ex_mem_pl.reset <= reset
    wire pc_mem : UInt<64> @[core.scala 220:20]
    wire inst_mem : UInt<32> @[core.scala 221:22]
    wire wb_addr_mem : UInt<5> @[core.scala 222:25]
    wire alu_out_mem : UInt<64> @[core.scala 223:25]
    wire rf_wen_mem : UInt<1> @[core.scala 224:24]
    wire mem_wen_mem : UInt<1> @[core.scala 225:25]
    wire wb_sel_mem : UInt<2> @[core.scala 226:24]
    wire Dmem_data_mem : UInt<64> @[core.scala 227:27]
    ex_mem_pl.io.pc_and_inst_in.pc <= pc_ex @[core.scala 229:34]
    pc_mem <= ex_mem_pl.io.pc_and_inst_out.pc @[core.scala 230:10]
    ex_mem_pl.io.pc_and_inst_in.inst <= inst_ex @[core.scala 232:36]
    inst_mem <= ex_mem_pl.io.pc_and_inst_out.inst @[core.scala 233:12]
    ex_mem_pl.io.wb_addr_in <= wb_addr_ex @[core.scala 236:27]
    wb_addr_mem <= ex_mem_pl.io.wb_addr_o @[core.scala 237:15]
    ex_mem_pl.io.alu_out_in <= alu_out @[core.scala 239:27]
    alu_out_mem <= ex_mem_pl.io.alu_out_o @[core.scala 240:15]
    ex_mem_pl.io.rf_wen_io.reg_wen_in <= rf_wen_ex @[core.scala 242:37]
    rf_wen_mem <= ex_mem_pl.io.rf_wen_io.reg_wen_o @[core.scala 243:14]
    ex_mem_pl.io.mem_wen_io.mem_wen_in <= memwen_ex @[core.scala 245:38]
    mem_wen_mem <= ex_mem_pl.io.mem_wen_io.mem_wen_o @[core.scala 246:15]
    ex_mem_pl.io.wb_sel_io.reg_wtype_in <= wb_sel_ex @[core.scala 248:39]
    wb_sel_mem <= ex_mem_pl.io.wb_sel_io.reg_wtype_out @[core.scala 249:14]
    ex_mem_pl.io.Dmem_wdata_in <= Dmem_wdata_ex @[core.scala 251:30]
    Dmem_data_mem <= ex_mem_pl.io.Dmem_wdata_o @[core.scala 252:17]
    io.DMemio.addr <= alu_out_mem @[core.scala 263:18]
    io.DMemio.wen <= mem_wen_mem @[core.scala 264:17]
    io.DMemio.wdata <= Dmem_data_mem @[core.scala 265:19]
    node _pc_plus4_mem_T = add(pc_mem, UInt<64>("h04")) @[core.scala 266:29]
    node pc_plus4_mem = tail(_pc_plus4_mem_T, 1) @[core.scala 266:29]
    inst mem_wb_pl of mem_wb @[core.scala 269:25]
    mem_wb_pl.clock <= clock
    mem_wb_pl.reset <= reset
    wire pc_wb : UInt<64> @[core.scala 270:19]
    wire inst_wb : UInt<64> @[core.scala 271:21]
    wire pc_plus4_wb : UInt<64> @[core.scala 272:25]
    wire wb_addr_wb : UInt<5> @[core.scala 273:24]
    wire alu_out_wb : UInt<64> @[core.scala 274:24]
    wire rf_wen_wb : UInt<1> @[core.scala 275:23]
    wire wb_sel_wb : UInt<2> @[core.scala 276:23]
    wire Dmemrdata_wb : UInt<64> @[core.scala 277:26]
    mem_wb_pl.io.pc_and_inst_in.pc <= pc_mem @[core.scala 279:34]
    pc_wb <= mem_wb_pl.io.pc_and_inst_o.pc @[core.scala 280:9]
    mem_wb_pl.io.pc_and_inst_in.inst <= inst_mem @[core.scala 282:36]
    inst_wb <= mem_wb_pl.io.pc_and_inst_o.inst @[core.scala 283:11]
    mem_wb_pl.io.pc_plus4_in <= pc_plus4_mem @[core.scala 285:28]
    pc_plus4_wb <= mem_wb_pl.io.pc_plus4_o @[core.scala 286:15]
    mem_wb_pl.io.wb_addr_in <= wb_addr_mem @[core.scala 288:27]
    wb_addr_wb <= mem_wb_pl.io.wb_addr_o @[core.scala 289:14]
    mem_wb_pl.io.rf_wen_io.reg_wen_in <= rf_wen_mem @[core.scala 291:37]
    rf_wen_wb <= mem_wb_pl.io.rf_wen_io.reg_wen_o @[core.scala 292:13]
    mem_wb_pl.io.wb_sel_io.reg_wtype_in <= wb_sel_mem @[core.scala 294:39]
    wb_sel_wb <= mem_wb_pl.io.wb_sel_io.reg_wtype_out @[core.scala 295:13]
    mem_wb_pl.io.Dmem_rdata_in <= io.DMemio.rdata @[core.scala 297:30]
    Dmemrdata_wb <= mem_wb_pl.io.Dmem_rdata_o @[core.scala 298:16]
    mem_wb_pl.io.alu_out_in <= alu_out_mem @[core.scala 300:27]
    alu_out_wb <= mem_wb_pl.io.alu_out_o @[core.scala 301:14]
    node _wb_data_T = eq(UInt<2>("h01"), wb_sel_wb) @[Mux.scala 80:60]
    node _wb_data_T_1 = mux(_wb_data_T, alu_out_wb, UInt<64>("h00")) @[Mux.scala 80:57]
    node _wb_data_T_2 = eq(UInt<2>("h02"), wb_sel_wb) @[Mux.scala 80:60]
    node _wb_data_T_3 = mux(_wb_data_T_2, pc_plus4_wb, _wb_data_T_1) @[Mux.scala 80:57]
    node _wb_data_T_4 = eq(UInt<2>("h03"), wb_sel_wb) @[Mux.scala 80:60]
    node wb_data = mux(_wb_data_T_4, Dmemrdata_wb, _wb_data_T_3) @[Mux.scala 80:57]
    rf.io.channel.wen <= rf_wen_wb @[core.scala 313:19]
    rf.io.channel.wdata <= wb_data @[core.scala 314:21]
    rf.io.channel.waddr <= wb_addr_wb @[core.scala 315:21]
    io.Deubug.Debug_rf_wen <= rf_wen_wb @[core.scala 322:24]
    io.Deubug.Debug_rf_wdata <= wb_data @[core.scala 323:26]
    io.Deubug.Debug_rf_waddr <= wb_addr_wb @[core.scala 324:26]
    io.Deubug.Debug_pc <= pc_wb @[core.scala 325:20]
    io.Deubug.Debug_inst <= inst_wb @[core.scala 326:22]
    inst dpi of dpi @[core.scala 328:21]
    dpi.inst_in is invalid
    dpi.inst_in <= inst_wb @[core.scala 329:20]
    
